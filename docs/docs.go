// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/healthz": {
            "get": {
                "description": "health check, no params needed",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "healthz"
                ],
                "summary": "health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/random/decimal": {
            "get": {
                "description": "generate a random decimal with given number range and precision, default range is 0~10, and defualt precision is 6",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "random"
                ],
                "summary": "generate random decimal",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "minmal number",
                        "name": "min",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "maxmum number",
                        "name": "max",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "decimal precision",
                        "name": "precision",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "'random decimal'",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/random/int": {
            "get": {
                "description": "generate random int number with given range, default is 0~10",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "random"
                ],
                "summary": "generate random int number",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "minmal number",
                        "name": "min",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "maxmum number",
                        "name": "max",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "'random number'",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/random/string": {
            "get": {
                "description": "generate random string with given length, default length is 8",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "random"
                ],
                "summary": "generate random string",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "random string length",
                        "name": "length",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
